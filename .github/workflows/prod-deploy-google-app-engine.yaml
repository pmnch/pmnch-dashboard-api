name: "Prod: Google App Engine - Build and deploy dashboard API"

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

jobs:

  build:
    name: Build container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set env variables to app.yaml
        uses: 73h/gae-app-yaml-replace-env-variables@v0.3
        env:
          # Required
          STAGE: prod
          ALLOW_ORIGINS: ${{ secrets.ALLOW_ORIGINS }}

          # Optional
          ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
          NEW_RELIC_URL: ${{ secrets.NEW_RELIC_URL }}
          NEWRELIC_API_KEY: ${{ secrets.NEWRELIC_API_KEY }}
          TRANSLATIONS_ENABLED: ${{ secrets.TRANSLATIONS_ENABLED }}
          CLOUD_SERVICE: google
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          INCLUDE_ALLCAMPAIGNS: ${{ secrets.INCLUDE_ALLCAMPAIGNS }}
          RELOAD_DATA_EVERY_12TH_HOUR: ${{ secrets.RELOAD_DATA_EVERY_12TH_HOUR }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          OWNER_NAME: ${{ secrets.OWNER_NAME }}
          OWNER_LINK: ${{ secrets.OWNER_LINK }}
          COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
          COMPANY_LINK: ${{ secrets.COMPANY_LINK }}
          GOOGLE_CREDENTIALS_JSON_B64: ${{ secrets.GOOGLE_CREDENTIALS_JSON_B64 }}
          GOOGLE_CLOUD_STORAGE_BUCKET_FILE: ${{ secrets.GOOGLE_CLOUD_STORAGE_BUCKET_FILE }}
          GOOGLE_CLOUD_STORAGE_BUCKET_TMP_DATA: ${{ secrets.GOOGLE_CLOUD_STORAGE_BUCKET_TMP_DATA }}
        with:
          app_yaml_path: "app.yaml"

      - name: Setup Google Cloud CLI
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON_B64 }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_environment_variables: true
          create_credentials_file: true

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Configure Docker'
        run: 'gcloud auth configure-docker'

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            version=${{ steps.tag.outputs.tag }}
          tags: gcr.io/${{ secrets.PROJECT_ID }}/dashboardapi:${{ github.sha }}

      - name: Deploy
        run: gcloud app deploy --image-url=gcr.io/${{ secrets.PROJECT_ID }}/dashboardapi:${{ github.sha }}
